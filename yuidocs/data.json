{
    "project": {
        "name": "Ember Test Utils",
        "description": "A utility module for testing ember apps."
    },
    "files": {
        "src/js/test-case-base.js": {
            "name": "src/js/test-case-base.js",
            "modules": {
                "test-case": 1
            },
            "classes": {
                "TestCase.TestSuit": 1,
                "TestCase.EmberTestSuit": 1,
                "TestCase.TestCase": 1,
                "TestCase.TestBlock": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/test-case-operations.js": {
            "name": "src/js/test-case-operations.js",
            "modules": {
                "test-case-operation": 1
            },
            "classes": {
                "TestCase.TestOperation": 1,
                "TestCase.TestValues": 1,
                "TestCase.TestValueCheckObject": 1,
                "TestCase.TestAssignValues": 1,
                "TestCase.TestValueAssignObject": 1,
                "TestCase.SetupStore": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/test-mockapis-wrapper.js": {
            "name": "src/js/test-mockapis-wrapper.js",
            "modules": {
                "mockjax-utils": 1
            },
            "classes": {
                "MockjaxUtils.MockjaxSettings": 1,
                "MockjaxUtils.MockjaxData": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/test-utils.js": {
            "name": "src/js/test-utils.js",
            "modules": {
                "test-utils": 1
            },
            "classes": {
                "TestUtils": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "test-case": {
            "name": "test-case",
            "submodules": {
                "test-case-operation": 1
            },
            "classes": {
                "TestCase.TestSuit": 1,
                "TestCase.EmberTestSuit": 1,
                "TestCase.TestCase": 1,
                "TestCase.TestBlock": 1,
                "TestCase.TestOperation": 1,
                "TestCase.TestValues": 1,
                "TestCase.TestValueCheckObject": 1,
                "TestCase.TestAssignValues": 1,
                "TestCase.TestValueAssignObject": 1,
                "TestCase.SetupStore": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/js/test-case-operations.js",
            "line": 194,
            "description": "Test Case Helper module."
        },
        "test-case-operation": {
            "name": "test-case-operation",
            "submodules": {},
            "classes": {
                "TestCase.TestOperation": 1,
                "TestCase.TestValues": 1,
                "TestCase.TestValueCheckObject": 1,
                "TestCase.TestAssignValues": 1,
                "TestCase.TestValueAssignObject": 1,
                "TestCase.SetupStore": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "test-case",
            "namespace": "",
            "file": "src/js/test-case-operations.js",
            "line": 194,
            "description": "Test Operations submodule."
        },
        "mockjax-utils": {
            "name": "mockjax-utils",
            "submodules": {},
            "classes": {
                "MockjaxUtils.MockjaxSettings": 1,
                "MockjaxUtils.MockjaxData": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/js/test-mockapis-wrapper.js",
            "line": 86,
            "description": "Wrapper to mock ajax request from CrudAdaptor module."
        },
        "test-utils": {
            "name": "test-utils",
            "submodules": {},
            "classes": {
                "TestUtils": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/js/test-utils.js",
            "line": 9,
            "description": "Utility funcitons for testing."
        }
    },
    "classes": {
        "TestCase.TestSuit": {
            "name": "TestCase.TestSuit",
            "shortname": "TestCase.TestSuit",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "test-case",
            "namespace": "",
            "file": "src/js/test-case-base.js",
            "line": 8,
            "description": "A simple test case suit class."
        },
        "TestCase.EmberTestSuit": {
            "name": "TestCase.EmberTestSuit",
            "shortname": "TestCase.EmberTestSuit",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "test-case",
            "namespace": "",
            "file": "src/js/test-case-base.js",
            "line": 54,
            "description": "Test suit which call moduleFor* module initializer provided by ember-qunit."
        },
        "TestCase.TestCase": {
            "name": "TestCase.TestCase",
            "shortname": "TestCase.TestCase",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "test-case",
            "namespace": "",
            "file": "src/js/test-case-base.js",
            "line": 82,
            "description": "Test Case class."
        },
        "TestCase.TestBlock": {
            "name": "TestCase.TestBlock",
            "shortname": "TestCase.TestBlock",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "test-case",
            "namespace": "",
            "file": "src/js/test-case-base.js",
            "line": 136,
            "description": "Test Case Block. A block of operations run synchronously. They are preeceded by a wait() and enclosed in andThen()."
        },
        "TestCase.TestOperation": {
            "name": "TestCase.TestOperation",
            "shortname": "TestCase.TestOperation",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "test-case",
            "submodule": "test-case-operation",
            "namespace": "",
            "file": "src/js/test-case-operations.js",
            "line": 8,
            "description": "Test Opertaion base class."
        },
        "TestCase.TestValues": {
            "name": "TestCase.TestValues",
            "shortname": "TestCase.TestValues",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "test-case",
            "submodule": "test-case-operation",
            "namespace": "",
            "file": "src/js/test-case-operations.js",
            "line": 18,
            "description": "Test Operation to check a set of values."
        },
        "TestCase.TestValueCheckObject": {
            "name": "TestCase.TestValueCheckObject",
            "shortname": "TestCase.TestValueCheckObject",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "test-case",
            "submodule": "test-case-operation",
            "namespace": "",
            "file": "src/js/test-case-operations.js",
            "line": 54,
            "description": "Object that has config for checking a value."
        },
        "TestCase.TestAssignValues": {
            "name": "TestCase.TestAssignValues",
            "shortname": "TestCase.TestAssignValues",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "test-case",
            "submodule": "test-case-operation",
            "namespace": "",
            "file": "src/js/test-case-operations.js",
            "line": 105,
            "description": "Test Operation to check a set of values."
        },
        "TestCase.TestValueAssignObject": {
            "name": "TestCase.TestValueAssignObject",
            "shortname": "TestCase.TestValueAssignObject",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "test-case",
            "submodule": "test-case-operation",
            "namespace": "",
            "file": "src/js/test-case-operations.js",
            "line": 134,
            "description": "Object that has config for checking a value."
        },
        "TestCase.SetupStore": {
            "name": "TestCase.SetupStore",
            "shortname": "TestCase.SetupStore",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "test-case",
            "submodule": "test-case-operation",
            "namespace": "",
            "file": "src/js/test-case-operations.js",
            "line": 194,
            "description": "Test Operation to setup ember data store."
        },
        "MockjaxUtils.MockjaxSettings": {
            "name": "MockjaxUtils.MockjaxSettings",
            "shortname": "MockjaxUtils.MockjaxSettings",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "mockjax-utils",
            "namespace": "",
            "file": "src/js/test-mockapis-wrapper.js",
            "line": 8,
            "description": "Mockjax settings class."
        },
        "MockjaxUtils.MockjaxData": {
            "name": "MockjaxUtils.MockjaxData",
            "shortname": "MockjaxUtils.MockjaxData",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "mockjax-utils",
            "namespace": "",
            "file": "src/js/test-mockapis-wrapper.js",
            "line": 86,
            "description": "Model data used to process a call to the model."
        },
        "TestUtils": {
            "name": "TestUtils",
            "shortname": "TestUtils",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "test-utils",
            "namespace": "",
            "file": "src/js/test-utils.js",
            "line": 9
        }
    },
    "classitems": [
        {
            "file": "src/js/test-case-base.js",
            "line": 25,
            "description": "Name of the test suit.",
            "itemtype": "property",
            "name": "suitName",
            "type": "String",
            "class": "TestCase.TestSuit",
            "module": "test-case"
        },
        {
            "file": "src/js/test-case-base.js",
            "line": 33,
            "description": "Options to be passed to the qunit module.",
            "itemtype": "property",
            "name": "moduleOpts",
            "type": "Object",
            "class": "TestCase.TestSuit",
            "module": "test-case"
        },
        {
            "file": "src/js/test-case-base.js",
            "line": 41,
            "description": "Array of test cases. Will be automatically be converted to TestCase classes based on \"testCase\" attribute.",
            "itemtype": "property",
            "name": "testCases",
            "type": "Array",
            "class": "TestCase.TestSuit",
            "module": "test-case"
        },
        {
            "file": "src/js/test-case-base.js",
            "line": 60,
            "description": "Module initializer function. Can have moduleFor, moduleForComponent or moduleForModel.",
            "itemtype": "property",
            "name": "moduleFunction",
            "type": "String",
            "default": "\"moduleFor\"",
            "class": "TestCase.EmberTestSuit",
            "module": "test-case"
        },
        {
            "file": "src/js/test-case-base.js",
            "line": 69,
            "description": "The 1st param passed to moduleFunction.",
            "itemtype": "property",
            "name": "param",
            "type": "String",
            "class": "TestCase.EmberTestSuit",
            "module": "test-case"
        },
        {
            "file": "src/js/test-case-base.js",
            "line": 96,
            "description": "Title of the test case.",
            "itemtype": "property",
            "name": "title",
            "type": "String",
            "class": "TestCase.TestCase",
            "module": "test-case"
        },
        {
            "file": "src/js/test-case-base.js",
            "line": 104,
            "description": "Object of data to be shared within test case.",
            "itemtype": "property",
            "name": "testData",
            "type": "Object",
            "class": "TestCase.TestCase",
            "module": "test-case"
        },
        {
            "file": "src/js/test-case-base.js",
            "line": 112,
            "description": "Array of test blocks. Will be automatically be converted to TestBlock classes based on \"block\" attribute.",
            "itemtype": "property",
            "name": "testBlocks",
            "type": "Array",
            "class": "TestCase.TestCase",
            "module": "test-case"
        },
        {
            "file": "src/js/test-case-operations.js",
            "line": 60,
            "description": "Path of the value to check. Can have indices also!",
            "itemtype": "property",
            "name": "path",
            "type": "String",
            "class": "TestCase.TestValueCheckObject",
            "module": "test-case",
            "submodule": "test-case-operation"
        },
        {
            "file": "src/js/test-case-operations.js",
            "line": 68,
            "description": "Value to check against.",
            "itemtype": "property",
            "name": "value",
            "type": "Number|Boolean|String|Object",
            "class": "TestCase.TestValueCheckObject",
            "module": "test-case",
            "submodule": "test-case-operation"
        },
        {
            "file": "src/js/test-case-operations.js",
            "line": 76,
            "description": "Path to get value from.",
            "itemtype": "property",
            "name": "value",
            "type": "String",
            "class": "TestCase.TestValueCheckObject",
            "module": "test-case",
            "submodule": "test-case-operation"
        },
        {
            "file": "src/js/test-case-operations.js",
            "line": 84,
            "description": "Message to show when the assertion passes.",
            "itemtype": "property",
            "name": "message",
            "type": "String",
            "class": "TestCase.TestValueCheckObject",
            "module": "test-case",
            "submodule": "test-case-operation"
        },
        {
            "file": "src/js/test-case-operations.js",
            "line": 140,
            "description": "Path of the value to assign to. Can have indices also!",
            "itemtype": "property",
            "name": "path",
            "type": "String",
            "class": "TestCase.TestValueAssignObject",
            "module": "test-case",
            "submodule": "test-case-operation"
        },
        {
            "file": "src/js/test-case-operations.js",
            "line": 148,
            "description": "Path within value gotten by path to assign to.",
            "itemtype": "property",
            "name": "putPath",
            "type": "String",
            "class": "TestCase.TestValueAssignObject",
            "module": "test-case",
            "submodule": "test-case-operation"
        },
        {
            "file": "src/js/test-case-operations.js",
            "line": 156,
            "description": "Value to assign.",
            "itemtype": "property",
            "name": "value",
            "type": "Number|Boolean|String|Object",
            "class": "TestCase.TestValueAssignObject",
            "module": "test-case",
            "submodule": "test-case-operation"
        },
        {
            "file": "src/js/test-case-operations.js",
            "line": 164,
            "description": "Path to get value from.",
            "itemtype": "property",
            "name": "value",
            "type": "String",
            "class": "TestCase.TestValueAssignObject",
            "module": "test-case",
            "submodule": "test-case-operation"
        },
        {
            "file": "src/js/test-case-operations.js",
            "line": 172,
            "description": "Param used in various operations. \nFor array operations, 0th element is operation, 1st element is additional param to operation.",
            "itemtype": "property",
            "name": "params",
            "type": "Array",
            "class": "TestCase.TestValueAssignObject",
            "module": "test-case",
            "submodule": "test-case-operation"
        },
        {
            "file": "src/js/test-mockapis-wrapper.js",
            "line": 14,
            "description": "If set to true, all calls will throw server error with error code 'serverErrorCode'.",
            "itemtype": "property",
            "name": "throwServerError",
            "type": "Boolean",
            "default": "false",
            "class": "MockjaxUtils.MockjaxSettings",
            "module": "mockjax-utils"
        },
        {
            "file": "src/js/test-mockapis-wrapper.js",
            "line": 23,
            "description": "Server error code to throw when 'throwServerError' is set to true.",
            "itemtype": "property",
            "name": "serverErrorCode",
            "type": "Number",
            "default": "500",
            "class": "MockjaxUtils.MockjaxSettings",
            "module": "mockjax-utils"
        },
        {
            "file": "src/js/test-mockapis-wrapper.js",
            "line": 32,
            "description": "Setting to 1 is equivalent to throwing a error by server in processing request.",
            "itemtype": "property",
            "name": "throwProcessError",
            "type": "Number",
            "default": "0",
            "class": "MockjaxUtils.MockjaxSettings",
            "module": "mockjax-utils"
        },
        {
            "file": "src/js/test-mockapis-wrapper.js",
            "line": 41,
            "description": "A map to change the model settings used for the call.",
            "itemtype": "property",
            "name": "modelChangeMap",
            "type": "Object",
            "class": "MockjaxUtils.MockjaxSettings",
            "module": "mockjax-utils"
        },
        {
            "file": "src/js/test-mockapis-wrapper.js",
            "line": 49,
            "description": "An object which contains data used in the last call. Has 'model', 'type' and 'params' from last call.",
            "itemtype": "property",
            "name": "lastPassedData",
            "readonly": "",
            "type": "Class",
            "class": "MockjaxUtils.MockjaxSettings",
            "module": "mockjax-utils"
        },
        {
            "file": "src/js/test-mockapis-wrapper.js",
            "line": 58,
            "description": "Response time to use. This is a jquerymockjax setting.",
            "itemtype": "property",
            "name": "responseTime",
            "type": "Number",
            "default": "50",
            "class": "MockjaxUtils.MockjaxSettings",
            "module": "mockjax-utils"
        },
        {
            "file": "src/js/test-mockapis-wrapper.js",
            "line": 71,
            "description": "If set to true, every call will be logged. This is a jquerymockjax setting.",
            "itemtype": "property",
            "name": "logging",
            "type": "Boolean",
            "default": "false",
            "class": "MockjaxUtils.MockjaxSettings",
            "module": "mockjax-utils"
        },
        {
            "file": "src/js/test-mockapis-wrapper.js",
            "line": 92,
            "description": "Model name as seen by ember-data.",
            "itemtype": "property",
            "name": "name",
            "type": "String",
            "class": "MockjaxUtils.MockjaxData",
            "module": "mockjax-utils"
        },
        {
            "file": "src/js/test-mockapis-wrapper.js",
            "line": 100,
            "description": "Array of fixture data for the model.",
            "itemtype": "property",
            "name": "data",
            "type": "Array",
            "class": "MockjaxUtils.MockjaxData",
            "module": "mockjax-utils"
        },
        {
            "file": "src/js/test-mockapis-wrapper.js",
            "line": 108,
            "description": "Ember Data model class created using ModelWrapper.createModelWrapper.",
            "itemtype": "property",
            "name": "modelClass",
            "type": "Class",
            "class": "MockjaxUtils.MockjaxData",
            "module": "mockjax-utils"
        },
        {
            "file": "src/js/test-mockapis-wrapper.js",
            "line": 116,
            "description": "Additional data to be sent during a get call.",
            "itemtype": "property",
            "name": "getAdditionalData",
            "type": "Object",
            "class": "MockjaxUtils.MockjaxData",
            "module": "mockjax-utils"
        },
        {
            "file": "src/js/test-mockapis-wrapper.js",
            "line": 124,
            "description": "Additional data to be sent during a getAll call.",
            "itemtype": "property",
            "name": "getAdditionalData",
            "type": "Object",
            "class": "MockjaxUtils.MockjaxData",
            "module": "mockjax-utils"
        },
        {
            "file": "src/js/test-mockapis-wrapper.js",
            "line": 132,
            "description": "Additional data to be sent during a create/update call.",
            "itemtype": "property",
            "name": "getAdditionalData",
            "type": "Object",
            "class": "MockjaxUtils.MockjaxData",
            "module": "mockjax-utils"
        },
        {
            "file": "src/js/test-utils.js",
            "line": 13,
            "description": "Check a list of elements in an array.",
            "itemtype": "method",
            "name": "TestUtils.checkElements",
            "static": 1,
            "params": [
                {
                    "name": "array",
                    "description": "The array to check in.",
                    "type": "Array"
                },
                {
                    "name": "path",
                    "description": "The path in array to compare to.",
                    "type": "String"
                },
                {
                    "name": "expected",
                    "description": "The array of expected values to be present in array.",
                    "type": "Array"
                },
                {
                    "name": "exactCheck",
                    "description": "Checks the exact position of elements in expected in array if true.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "class": "TestUtils",
            "module": "test-utils"
        },
        {
            "file": "src/js/test-utils.js",
            "line": 37,
            "description": "Get current date with offset.",
            "itemtype": "method",
            "name": "TestUtils.getCurDate",
            "static": 1,
            "params": [
                {
                    "name": "offset",
                    "description": "Offset from current date. Can be negative.",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns local date + time.",
                "type": "Date"
            },
            "class": "TestUtils",
            "module": "test-utils"
        },
        {
            "file": "src/js/test-utils.js",
            "line": 53,
            "description": "Checks a set of attributes in an ember object.",
            "itemtype": "method",
            "name": "TestUtils.hasAttrs",
            "static": 1,
            "params": [
                {
                    "name": "obj",
                    "description": "Ember object to check in.",
                    "type": "Class"
                },
                {
                    "name": "attrs",
                    "description": "An object with key values pairs to check in obj.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns true if obj has attrs else false.",
                "type": "Boolean"
            },
            "class": "TestUtils",
            "module": "test-utils"
        },
        {
            "file": "src/js/test-utils.js",
            "line": 73,
            "description": "Setup app to start emmiting events without passing advance readinies to save time. Also registers a few views missing by default (bug?).",
            "itemtype": "method",
            "name": "TestUtils.setupAppForTesting",
            "static": 1,
            "params": [
                {
                    "name": "app",
                    "description": "App object.",
                    "type": "Class"
                },
                {
                    "name": "container",
                    "description": "Container object.",
                    "type": "Class"
                }
            ],
            "class": "TestUtils",
            "module": "test-utils"
        },
        {
            "file": "src/js/test-utils.js",
            "line": 90,
            "description": "Advanced getter with a few extra features.\nUse .i. to get into indiex i.\nUse [a=b] to run findBy(a, b).",
            "itemtype": "method",
            "name": "TestUtils.getter",
            "static": 1,
            "params": [
                {
                    "name": "obj",
                    "description": "Object to get from.",
                    "type": "Class"
                },
                {
                    "name": "path",
                    "description": "Path to get from.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns an array with [value, lastObj extracted, last part of path]",
                "type": "Array"
            },
            "class": "TestUtils",
            "module": "test-utils"
        },
        {
            "file": "src/js/test-utils.js",
            "line": 141,
            "description": "Advanced setter with call to TestUtils.getter",
            "itemtype": "method",
            "name": "TestUtils.setter",
            "static": 1,
            "params": [
                {
                    "name": "obj",
                    "description": "Object to put to.",
                    "type": "Class"
                },
                {
                    "name": "path",
                    "description": "Path to object at the last part. If the last object is array, array modification is fired.",
                    "type": "String"
                },
                {
                    "name": "putPath",
                    "description": "Path to put to at the object at last part. In case of array modification like push putPath will be an array with 0th element as the operation (allowed - push, pop, unshift, shift, remove, insertAt, removeAt) and 1st element as the index.",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "Value to put.",
                    "type": "Any"
                }
            ],
            "class": "TestUtils",
            "module": "test-utils"
        }
    ],
    "warnings": [
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/js/test-utils.js:37"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/js/test-utils.js:53"
        }
    ]
}